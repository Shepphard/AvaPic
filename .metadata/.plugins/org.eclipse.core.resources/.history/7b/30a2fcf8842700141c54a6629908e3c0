package mp.edu.hs.trier.de.view.settings.elements;

import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.border.Border;

import mp.edu.hs.trier.de.controller.settings.PictureFormatController;
import mp.edu.hs.trier.de.controller.settings.SettingsController;
import mp.edu.hs.trier.de.model.SettingsModel;

public class PictureFormatView extends JPanel implements ActionListener {

	private SettingsModel sm;
	private SettingsController sCont;
	
	public PictureFormatView(SettingsModel sm, SettingsController sCont)
	{
		this.sm = sm;
		this.sCont = sCont;
		
		Border lineBorder = BorderFactory.createTitledBorder("Picture Format");
		setBorder(lineBorder);
		
		setLayout(new FlowLayout());
		
		String[] formatNames = {"png", "jpeg", "bmp", "wbmp", "gif"}; 

		JComboBox<String> formats = new JComboBox<String>(formatNames);
		formats.addActionListener(this);
		formats.setSelectedItem(sm.getPictureFormat());

		add(new JLabel("Select the desired format you want the picture to be saved as."));
		add(formats);
		
	}

	@SuppressWarnings("unchecked")
	@Override
	public void actionPerformed(ActionEvent e) {
		JComboBox<String> jc = (JComboBox<String>)(e.getSource());
		sCont.setFormat(jc.getSelectedItem().toString());
		
	}
}
