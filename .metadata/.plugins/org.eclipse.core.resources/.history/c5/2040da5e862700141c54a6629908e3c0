package mp.edu.hs.trier.de.view.maincontainers.change;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.BorderFactory;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.border.Border;

import mp.edu.hs.trier.de.controller.parameters.ParameterController;
import mp.edu.hs.trier.de.model.IShapeModelChanged;
import mp.edu.hs.trier.de.model.ShapeModel;
import mp.edu.hs.trier.de.model.Shape;

@SuppressWarnings("serial")
public class ChangeShape extends JPanel implements ItemListener, IShapeModelChanged{

	private ShapeModel model;
	
	//Retrieve all the Shapes
	private Shape[] shapes = Shape.values();
	
	private ParameterController pCont;
	private JComboBox<Shape> cBox;
	
	public ChangeShape(ShapeModel model, ParameterController pCont)
	{
		this.model = model;
		this.cBox = new JComboBox<>();
		this.pCont = pCont;
		
		Border lineBorder = BorderFactory.createTitledBorder("Shape");
		setBorder(lineBorder);
		
		for(int i = 0; i < shapes.length; i++)
		{
			cBox.addItem(shapes[i]);
			
			if(model.getShape().equals(shapes[i]))
			{
				cBox.setSelectedIndex(i);
			}
		}

		cBox.addItemListener(this);
		
		
		add(cBox);
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public void itemStateChanged(ItemEvent evt) 
	{
		
		if(evt.getStateChange() == ItemEvent.SELECTED)
		{
			JComboBox<Shape> jcBox = (JComboBox<Shape>)evt.getSource();
			int selectedIndex = jcBox.getSelectedIndex();
			pCont.setShape(shapes[selectedIndex]);
		}
		
	}

	@Override
	public void modelChanged() {
		cBox.setSelectedItem(model.getShape());
		
	}
	
}
